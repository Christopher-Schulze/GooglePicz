name: Rust CI

on:
  push:
    branches: ["main"]
    tags: ['*']
  pull_request:
  release:
    types: [published]

jobs:
  package:
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      MAC_SIGN_ID: ${{ secrets.MAC_SIGN_ID }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      WINDOWS_CERT: ${{ secrets.WINDOWS_CERT }}
      WINDOWS_CERT_PASSWORD: ${{ secrets.WINDOWS_CERT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Install Rust toolchain
        if: runner.os != 'Linux'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install platform tools
        if: runner.os == 'Windows'
        run: choco install nsis -y

      - name: Install cargo-bundle
        if: runner.os == 'macOS'
        run: cargo install cargo-bundle

      - name: Install cargo-deb
        if: runner.os == 'Linux'
        run: cargo install cargo-deb

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: ./.github/actions/checks

      - name: Build release
        run: cargo build --release --package googlepicz

      - name: Package
        run: cargo run --package packaging --bin packager

      - name: Verify metadata and artifacts
        run: cargo run --package packaging --bin ci_checks

      - name: Run packager
        run: cargo run --package packaging --bin packager

      - name: Upload Linux artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: googlepicz-linux
          path: GooglePicz-*.deb

      - name: Upload macOS artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: googlepicz-macos
          path: target/release/GooglePicz-*.dmg

      - name: Upload Windows artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: googlepicz-windows
          path: target/windows/GooglePicz-*-Setup.exe

  packaging-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run packaging tests
        run: cargo test -p packaging
