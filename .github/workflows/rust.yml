name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/christopher-schulze/googlepicz-ci:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Format check
        run: cargo fmt -- --check

      - name: Clippy check
        run: cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test --all

      - name: Build release
        run: cargo build --release --package googlepicz

      - name: Package
        run: cargo run --package packaging --bin packager

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: googlepicz-linux
          path: target/release/googlepicz*

  build-macos:
    runs-on: macos-latest
    env:
      MAC_SIGN_ID: ${{ secrets.MAC_SIGN_ID }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install cargo-bundle
        run: cargo install cargo-bundle

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Format check
        run: cargo fmt -- --check

      - name: Clippy check
        run: cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test --all

      - name: Build release
        run: cargo build --release --package googlepicz

      - name: Package
        run: cargo run --package packaging --bin packager

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: googlepicz-macos
          path: target/release/bundle/osx/GooglePicz.app

  build-windows:
    runs-on: windows-latest
    env:
      WINDOWS_CERT: ${{ secrets.WINDOWS_CERT }}
      WINDOWS_CERT_PASSWORD: ${{ secrets.WINDOWS_CERT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install NSIS
        run: choco install nsis -y

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Format check
        run: cargo fmt -- --check

      - name: Clippy check
        run: cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test --all

      - name: Build release
        run: cargo build --release --package googlepicz

      - name: Package
        run: cargo run --package packaging --bin packager

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: googlepicz-windows
          path: GooglePiczSetup.exe
